# Run Tests

name: OpenMDAO Workflow

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  # Remove push when finally merging
  push:
    branches: [ test ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This job is called test
  test:
    # Run on Ubuntu
    runs-on: ubuntu-latest

    strategy:
      matrix:
        PY: [3]
        PETSc: ["3"]

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version:  ${{ matrix.PY }}

      - name: Install & test
        run: |
          echo "PY=$PY PETSC=$PETSc"

          # $CONDA is an environment variable pointing to the root of the miniconda directory
          echo $CONDA
          echo $GITHUB_PATH
          echo $CONDA/bin >> $GITHUB_PATH
          echo $GITHUB_PATH

          if [ -n "$PETSc" ]; then
            echo " >> Installing PETSc";
            echo " >> ================";
            conda install -c anaconda mpi4py --yes;
            conda install -c conda-forge petsc=$PETSc petsc4py --yes;
          fi

          echo " >> Installing OpenMDAO";
          echo " >> ===================";
          pip install .[all]

          echo " >> Installing optional packages for testing/coverage";
          echo " >> =================================================";
          pip install psutil objgraph git+https://github.com/mdolab/pyxdsm;
          pyppeteer-install

          conda list
          pip list

          echo " >> Run tests";
          echo " >> =========";
          testflo -n 1 openmdao --timeout=120 --show_skipped --coverage  --coverpkg openmdao --cover-omit \*tests/\*  --cover-omit \*devtools/\* --cover-omit \*test_suite/\* --cover-omit \*docs/\* --cover-omit \*code_review/\*;
