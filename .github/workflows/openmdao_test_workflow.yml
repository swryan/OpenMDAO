# Run Tests

name: OpenMDAO Workflow

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  # Remove push when finally merging
  push:
    branches: [ test ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This job is called test
  test:
    # Run on Ubuntu
    runs-on: ubuntu-latest

    strategy:
      matrix:
        PY: [3]
        NUMPY: [1]
        SCIPY: [1]
        PETSc: [3]
        PYOPTSPARSE: ['v2.1.5']

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version:  ${{ matrix.PY }}

      - name: Install & test
        run: |
          echo "=============================================================";
          echo "Create conda environment";
          echo "=============================================================";
          source $CONDA/etc/profile.d/conda.sh;

          echo $CONDA/bin >> $GITHUB_PATH;

          conda create -n OpenMDAO python=${{ matrix.PY }} numpy=${{ matrix.NUMPY }} numpy=${{ matrix.SCIPY }} -q -y;

          conda activate OpenMDAO;

          if [ "${{ matrix.PETSc }}" ]; then
            echo "=============================================================";
            echo "Installing PETSc";
            echo "=============================================================";

            conda install -c anaconda mpi4py -q -y;
            conda install -c conda-forge petsc=$${{ matrix.PETSc }} petsc4py -q -y;
          fi

          if [ "${{ matrix.PYOPTSPARSE }}" ]; then
            echo "=============================================================";
            echo "Installing pyoptsparse";
            echo "=============================================================";
            git clone -q https://github.com/OpenMDAO/build_pyoptsparse;

            cd build_pyoptsparse;
            chmod 755 ./build_pyoptsparse.sh;
            ./build_pyoptsparse.sh -b "${{ matrix.PYOPTSPARSE }}";
            cd ..

            export LD_LIBRARY_PATH=$HOME/ipopt/lib;
          fi

          echo "=============================================================";
          echo "Installing OpenMDAO";
          echo "=============================================================";
          pip install .[all];

          echo "=============================================================";
          echo "Installing optional packages for testing/coverage";
          echo "=============================================================";
          pip install psutil objgraph git+https://github.com/mdolab/pyxdsm;
          pyppeteer-install;

          echo "=============================================================";
          echo "Test environment";
          echo "=============================================================";
          conda list;

          echo "=============================================================";
          echo "Run tests & make docs";
          echo "=============================================================";
          cd openmdao/docs;

          testflo -n 1 openmdao --timeout=120 --show_skipped --coverage --coverpkg openmdao --cover-omit \*tests/\*  --cover-omit \*devtools/\* --cover-omit \*test_suite/\* --cover-omit \*docs/\* --cover-omit \*code_review/\*;
          
          if [ "${{ matrix.PETSc }}" ]; then
            make travis;
          fi
